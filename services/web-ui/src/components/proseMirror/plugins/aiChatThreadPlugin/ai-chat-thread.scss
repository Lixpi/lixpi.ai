// AI Chat Thread Styles
@import '../../ProseMirrorMixings.scss';
@import '../../../../sass/components/tag-pill-dropdown';

// ========== AI CHAT THREAD WRAPPER ==========
.ai-chat-thread-wrapper {
    position: relative;

    // ===== THREAD CONTENT =====
    .ai-chat-thread-content {
        position: relative;
    }

    // ===== THREAD BOUNDARY SYSTEM =====
    .ai-thread-boundary-indicator {
        position: absolute;
        right: -47px;
        top: -6px;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: transparent;
        border-radius: 50%;
        z-index: 3;
        cursor: pointer;

        .ai-thread-boundary-icon {
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            pointer-events: none;

            svg {
                width: 20px;
                height: 20px;
                fill: $nightBlue;
            }
        }
    }

    .ai-thread-boundary-indicator-line {
        position: absolute;
        right: -15px;
        top: 0;
        bottom: 0;
        width: 1px;
        background: $steelBlue;
        opacity: 0;
        transform: scaleY(0);
        min-height: 50px;
        transform-origin: top;
        transition: pupOutTransition(all, 200ms);
        z-index: 5;
        pointer-events: none;

        @include boundaryPointerTriangle((
            direction: 'left',
            anchor: 'bottom',
            horizontalOffset: 0px,
            verticalOffset: 2px,
            size: 4px,
            color: $steelBlue,
            accentColor: $nightBlue
        ));
    }

    // ===== INFO DROPDOWN =====
    .ai-thread-info-dropdown {
        position: absolute;
        right: 0;
        top: 0;
        pointer-events: none;

        @include dropdownChipStructure((
            triggerHeight: 24px,
            svgSize: 1.0rem,
            iconSize: 14px,
            triggerPadding: 0.15rem 0.25rem,
            submenuOverflow: visible,
            arrowSide: 'right'
        ));
        @include dropdownChipSubmenuPlacement((
            rightOffset: 0px,
            topOffset: 32px
        ));

        &.theme-dark {
            @include tagPillDropdownDarkTheme((
                arrowSide: 'right'
            ));
        }

        .dots-dropdown-menu {
            button.dropdown-trigger-hidden {
                display: none;
            }

            .submenu-wrapper {
                display: none;
                position: absolute;
                right: 50px;
                top: 6px;
                z-index: 999;
            }

            .submenu {
                position: relative;
                right: 0;
            }
        }
    }

    // ===== AI SUBMIT BUTTON =====
    .ai-submit-button {
        position: absolute;
        bottom: -0.75rem;
        right: 1rem;
        border-radius: 50%;
        opacity: 0.8;
        transition: hoverTransition(all, 400ms);
        cursor: pointer;

        // Button state containers
        .button-default,
        .button-hover,
        .button-receiving {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 32px;
            height: 32px;
            transition: hoverTransition(all, 250ms);
        }

        // Default state (always visible)
        .button-default {
            opacity: 1;
            position: relative;
            z-index: 1;
        }

        // Hover and receiving states (overlays)
        .button-hover,
        .button-receiving {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            opacity: 0;
            pointer-events: none;
        }

        // Z-index layering
        .button-hover { z-index: 2; }
        .button-receiving { z-index: 3; }

        // Icon styles
        .send-icon {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 24px;
            height: 24px;

            svg {
                width: 24px;
                height: 24px;
                fill: $nightBlue;
                transition: hoverTransition(fill, 150ms);
            }
        }

        .stop-icon {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 30px;
            height: 30px;

            svg {
                width: 30px;
                height: 30px;
                fill: $nightBlue;
                transition: hoverTransition(fill, 150ms);
            }
        }
    }

    // ===== INTERACTION STATES =====

    // Thread boundary visibility
    &.thread-boundary-visible {
        .ai-thread-boundary-indicator-line {
            opacity: 1;
            transform: scaleY(1);
        }
    }

    // Boundary indicator hover
    .ai-thread-boundary-indicator:hover {
        .ai-thread-info-dropdown {
            pointer-events: auto;

            .dots-dropdown-menu .submenu-wrapper {
                display: block;
            }
        }
    }

    // Submit button hover (when not receiving)
    &:not(.receiving) .ai-submit-button:hover {
        opacity: 1;
        border-color: rgba($steelBlue, 0.3);
        transition: hoverTransition(all, 250ms);

        .button-default { opacity: 0; pointer-events: none; }
        .button-hover { opacity: 1; pointer-events: auto; }
        .button-receiving { opacity: 0; pointer-events: none; }
    }

    // Thread focus state
    &:focus-within .ai-submit-button {
        opacity: 1;
        transform: translateY(-2px);
    }

    // ===== RECEIVING STATE =====
    &.receiving {
        .ai-submit-button {
            border-color: $redPink;
            background-color: white;
            transition: hoverTransition(background, 300ms);

            // Hide normal states
            .button-default,
            .button-hover {
                opacity: 0 !important;
                pointer-events: none !important;
            }

            // Show receiving state
            .button-receiving {
                opacity: 1 !important;
                pointer-events: auto !important;
            }

            // Receiving hover state
            &:hover {
                .button-default,
                .button-hover {
                    opacity: 0 !important;
                    pointer-events: none !important;
                }

                .button-receiving {
                    opacity: 1 !important;
                    pointer-events: auto !important;

                    .stop-icon svg {
                        fill: $redPink;
                    }
                }
            }
        }
    }
}

// ========== AI RESPONSE MESSAGE WRAPPER ==========
.ai-response-message-wrapper {
    margin: 0;
    padding: 0.8rem 0 0.7rem;
    position: relative;

    // ===== USER AVATAR =====
    .user-avatar {
        display: block;
        width: 21px;
        height: 21px;
        border-radius: 99px;
        position: absolute;
        user-select: none;
        left: -55px;
        bottom: 0.01rem;
        cursor: default;

        svg {
            fill: #94999d;
        }

        // Assistant providers
        &.assistant-anthropic {
            left: -55.5px;

            svg {
                fill: #D97757;
                width: 21.5px;
                height: 21.5px;
            }
        }

        &.assistant-openai {
            overflow: hidden;

            svg {
                fill: $aiGreen;
            }

            &.node-receiving-animation svg {
                animation: heartbeatAnimation 1.5s infinite;
                animation-timing-function: ease-in-out;
            }
        }
    }

    // ===== AI RESPONSE MESSAGE =====
    .ai-response-message {
        position: relative;
        z-index: 2;
        margin: 0;
        display: flex;
        align-items: center;
        padding: 0;

        // Boundary indicator
        .ai-response-message-boundaries-indicator {
            position: absolute;
            left: -21px;
            display: block;
            height: 100%;
            width: $aiResponseMessageIndicatorBoundariesWidth;
            transition: height 400ms cubic-bezier(0.19, 1, 0.22, 1);
            background-color: $aiResponseMessageIndicatorColor;
            border-radius: 100px;

            @include boundaryPointerTriangle((
                direction: 'left',
                anchor: 'bottom',
                horizontalOffset: 0px,
                verticalOffset: 8px,
                size: 3px,
                color: $aiResponseMessageIndicatorColor,
                accentColor: $aiResponseMessageIndicatorAccentPointerColor
            ));

            &.node-render-animation {
                animation: popOutAndGrow 300ms cubic-bezier(0.19, 1, 0.22, 1);
            }
        }

        // Message content
        .ai-response-message-content {
            padding: 0;

            &.node-render-animation {
                animation: popOut 400ms cubic-bezier(0.19, 1, 0.22, 1);
            }

            h1, h2, h3, h4, h5, h6 {
                &:first-child {
                    margin-top: 0;
                }
            }
        }
    }
}