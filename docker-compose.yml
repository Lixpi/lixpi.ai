services:

    lixpi-dynamodb:
        container_name: lixpi-dynamodb
        image: amazon/dynamodb-local:latest
        user: "0:0"  # run as root so the volume is writable
        command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "/data", "-cors", "*", "-delayTransientStatuses"]
        ports:
            - 8000:8000
        volumes:
            - dynamodb-data:/data
        networks:
            - nats

    lixpi-dynamodb-admin:
        container_name: lixpi-dynamodb-admin
        image: aaronshaf/dynamodb-admin
        environment:
            DYNAMO_ENDPOINT: http://lixpi-dynamodb:8000
            AWS_REGION: us-east-1
            AWS_ACCESS_KEY_ID: test
            AWS_SECRET_ACCESS_KEY: test
        ports:
            - 8001:8001
        depends_on:
            - lixpi-dynamodb
        networks:
            - nats

    lixpi-nats-1:
        container_name: lixpi-nats-1
        image: lixpi/nats
        build:
            dockerfile: Dockerfile
            context: services/nats
        depends_on:
            lixpi-caddy:
                condition: service_completed_successfully
        ports:
            - 4222:4222
            - 8222:8222
            - 9222:443    # websockets port (host:container)
        environment:
            # NATS config
            NATS_CLUSTER_NAME: Lixpi-NATS
            NATS_SERVER_NAME: Lixpi-NATS-1  # Explicit server name for each instance
            NATS_DEBUG_MODE: ${NATS_DEBUG_MODE}
            NATS_TRACE_MODE: ${NATS_TRACE_MODE}
            NATS_SYS_USER_PASSWORD: ${NATS_SYS_USER_PASSWORD}
            NATS_REGULAR_USER_PASSWORD: ${NATS_REGULAR_USER_PASSWORD}
            NATS_AUTH_NKEY_ISSUER_PUBLIC: ${NATS_AUTH_NKEY_ISSUER_PUBLIC}
            NATS_AUTH_XKEY_ISSUER_PUBLIC: ${NATS_AUTH_XKEY_ISSUER_PUBLIC}
            NATS_SAME_ORIGIN: ${NATS_SAME_ORIGIN}
            NATS_ALLOWED_ORIGINS: ${NATS_ALLOWED_ORIGINS}
            # Certificate management (always required for TLS)
            USE_REAL_CERTIFICATES: "true"
            CERT_STORAGE_TYPE: "local"
            CERT_LOCAL_PATH: "/opt/nats/certs"
            # Domain name for WebSocket origins
            DOMAIN_NAME: ${DOMAIN_NAME}
        volumes:
            - caddy-certs:/opt/nats/certs:ro  # Read-only certificates from Caddy
        command: [
            "--config", "/opt/nats/nats-server.conf",
            "--routes", "nats://sys:${NATS_SYS_USER_PASSWORD}@lixpi-nats-1:6222,nats://sys:${NATS_SYS_USER_PASSWORD}@lixpi-nats-2:6222,nats://sys:${NATS_SYS_USER_PASSWORD}@lixpi-nats-3:6222"
        ]
        networks:
            - nats


    lixpi-nats-2:
        container_name: lixpi-nats-2
        image: lixpi/nats
        build:
            dockerfile: Dockerfile
            context: services/nats
        depends_on:
            lixpi-caddy:
                condition: service_completed_successfully
        environment:
            # NATS config
            NATS_CLUSTER_NAME: Lixpi-NATS
            NATS_SERVER_NAME: Lixpi-NATS-2  # Explicit server name for each instance
            NATS_DEBUG_MODE: ${NATS_DEBUG_MODE}
            NATS_TRACE_MODE: ${NATS_TRACE_MODE}
            NATS_SYS_USER_PASSWORD: ${NATS_SYS_USER_PASSWORD}
            NATS_REGULAR_USER_PASSWORD: ${NATS_REGULAR_USER_PASSWORD}
            NATS_AUTH_NKEY_ISSUER_PUBLIC: ${NATS_AUTH_NKEY_ISSUER_PUBLIC}
            NATS_AUTH_XKEY_ISSUER_PUBLIC: ${NATS_AUTH_XKEY_ISSUER_PUBLIC}
            NATS_SAME_ORIGIN: ${NATS_SAME_ORIGIN}
            NATS_ALLOWED_ORIGINS: ${NATS_ALLOWED_ORIGINS}
            # Certificate management (always required for TLS)
            USE_REAL_CERTIFICATES: "true"
            CERT_STORAGE_TYPE: "local"
            CERT_LOCAL_PATH: "/opt/nats/certs"
            # Domain name for WebSocket origins
            DOMAIN_NAME: ${DOMAIN_NAME}
        volumes:
            - caddy-certs:/opt/nats/certs:ro  # Read-only certificates from Caddy
        command: [
            "--config", "/opt/nats/nats-server.conf",
            "--routes", "nats://sys:${NATS_SYS_USER_PASSWORD}@lixpi-nats-1:6222,nats://sys:${NATS_SYS_USER_PASSWORD}@lixpi-nats-2:6222,nats://sys:${NATS_SYS_USER_PASSWORD}@lixpi-nats-3:6222"
        ]
        networks:
            - nats

    lixpi-nats-3:
        container_name: lixpi-nats-3
        image: lixpi/nats
        build:
            dockerfile: Dockerfile
            context: services/nats
        depends_on:
            lixpi-caddy:
                condition: service_completed_successfully
        environment:
            # NATS config
            NATS_CLUSTER_NAME: Lixpi-NATS
            NATS_SERVER_NAME: Lixpi-NATS-3  # Explicit server name for each instance
            NATS_DEBUG_MODE: ${NATS_DEBUG_MODE}
            NATS_TRACE_MODE: ${NATS_TRACE_MODE}
            NATS_SYS_USER_PASSWORD: ${NATS_SYS_USER_PASSWORD}
            NATS_REGULAR_USER_PASSWORD: ${NATS_REGULAR_USER_PASSWORD}
            NATS_AUTH_NKEY_ISSUER_PUBLIC: ${NATS_AUTH_NKEY_ISSUER_PUBLIC}
            NATS_AUTH_XKEY_ISSUER_PUBLIC: ${NATS_AUTH_XKEY_ISSUER_PUBLIC}
            NATS_SAME_ORIGIN: ${NATS_SAME_ORIGIN}
            NATS_ALLOWED_ORIGINS: ${NATS_ALLOWED_ORIGINS}
            # Certificate management (always required for TLS)
            USE_REAL_CERTIFICATES: "true"
            CERT_STORAGE_TYPE: "local"
            CERT_LOCAL_PATH: "/opt/nats/certs"
            # Domain name for WebSocket origins
            DOMAIN_NAME: ${DOMAIN_NAME}
        volumes:
            - caddy-certs:/opt/nats/certs:ro  # Read-only certificates from Caddy
        command: [
            "--config", "/opt/nats/nats-server.conf",
            "--routes", "nats://sys:${NATS_SYS_USER_PASSWORD}@lixpi-nats-1:6222,nats://sys:${NATS_SYS_USER_PASSWORD}@lixpi-nats-2:6222,nats://sys:${NATS_SYS_USER_PASSWORD}@lixpi-nats-3:6222"
        ]
        networks:
            - nats

    lixpi-nats-cli:
        container_name: lixpi-nats-cli
        image: synadia/nats-box:latest
        command: >
            -c "sleep infinity"
        stop_signal: SIGTERM
        networks:
            - nats


    lixpi-web-ui:
        container_name: lixpi-web-ui
        image: lixpi/web-ui
        build:
            dockerfile: services/web-ui/Dockerfile
            context: .
        environment:
            VITE_API_URL: ${VITE_API_URL}
            VITE_AUTH0_LOGIN_URL: ${VITE_AUTH0_LOGIN_URL}
            VITE_AUTH0_DOMAIN: ${VITE_AUTH0_DOMAIN}
            VITE_AUTH0_CLIENT_ID: ${VITE_AUTH0_CLIENT_ID}
            VITE_AUTH0_AUDIENCE: ${VITE_AUTH0_AUDIENCE}
            VITE_AUTH0_REDIRECT_URI: ${VITE_AUTH0_REDIRECT_URI}
            VITE_STRIPE_PUBLIC_KEY: ${VITE_STRIPE_PUBLIC_KEY}
            VITE_NATS_SERVER: ${VITE_NATS_SERVER}
        volumes:
            - ./services/web-ui/Dockerfile:/usr/src/service/Dockerfile:cached
            - ./services/web-ui/index.html:/usr/src/service/index.html:cached
            - ./services/web-ui/jsconfig.json:/usr/src/service/jsconfig.json:cached
            - ./services/web-ui/package.json:/usr/src/service/package.json:cached

            # - ./pnpm-workspace.yaml:/usr/src/service/pnpm-workspace.yaml
            - ./services/web-ui/postcss.config.js:/usr/src/service/postcss.config.js:cached    # Tailwind 4 doesn't require postcss, but fucking shadcn DOES :( :( :(

            - ./services/web-ui/public:/usr/src/service/public:cached
            # - ./services/web-ui/dist:/usr/src/service/dist:cached    # Build output directory

            - ./services/web-ui/src:/usr/src/service/src:cached

            - ./services/web-ui/vite.config.ts:/usr/src/service/vite.config.ts:cached
            - ./services/web-ui/svelte.config.js:/usr/src/service/svelte.config.js:cached

            - ./services/web-ui/tailwind.config.ts:/usr/src/service/tailwind.config.ts:cached

            - ./services/web-ui/tsconfig.json:/usr/src/service/tsconfig.json:cached


            - ./packages/lixpi/constants/src:/usr/src/service/packages/lixpi/constants/src:cached
            - ./packages/lixpi/constants/package.json:/usr/src/service/packages/lixpi/constants/package.json:cached
            - ./packages/lixpi/debug-tools/src:/usr/src/service/packages/lixpi/debug-tools/src:cached
            - ./packages/lixpi/debug-tools/package.json:/usr/src/service/packages/lixpi/debug-tools/package.json:cached
            - ./packages/lixpi/nats-service/src:/usr/src/service/packages/lixpi/nats-service/src:cached
            - ./packages/lixpi/nats-service/package.json:/usr/src/service/packages/lixpi/nats-service/package.json:cached

            # - ./packages-vendor/bits-ui/packages/bits-ui:/usr/src/service/packages/bits-ui
            - ./packages-vendor/shadcn-svelte/sites/docs/src/lib:/usr/src/service/packages/shadcn-svelte/lib:cached

            # CA certificate for browser installation
            - caddy-certs:/usr/src/service/public/certs:ro

        networks:
            - nats

        working_dir: /usr/src/service
        # making sure we install the packages before running the dev server
        # command: >
        #     pnpm run build-and-serve
        command: >
            sh -c "pnpm i
            && pnpm run dev"
        stop_signal: SIGTERM
        ports:
            - 3001:5173

    lixpi-api:
        container_name: lixpi-api
        restart: always
        image: lixpi/api
        build:
            dockerfile: services/api/Dockerfile
            context: .
        environment:
            # Force color output in the terminal, required for chalk.js to work
            FORCE_COLOR: 1

            # Node.js config
            NODE_OPTIONS: '--trace-deprecation --abort-on-uncaught-exception --trace-warnings --disable-warning=ExperimentalWarning --experimental-transform-types'

            # Pulumi Config that's also used by the API
            ORG_NAME: ${ORG_NAME}
            STAGE: ${STAGE}
            ENVIRONMENT: ${ENVIRONMENT}

            # AWS credentials, used only for local development
            AWS_REGION: ${AWS_REGION}
            AWS_PROFILE: ${AWS_PROFILE}

            # DynamoDB config
            DYNAMODB_ENDPOINT: ${DYNAMODB_ENDPOINT}

            # App host addresses
            ORIGIN_HOST_URL: ${ORIGIN_HOST_URL}
            API_HOST_URL: ${API_HOST_URL}

            # Auth0 config
            AUTH0_DOMAIN: ${AUTH0_DOMAIN}
            AUTH0_API_IDENTIFIER: ${AUTH0_API_IDENTIFIER}

            # NATS config
            NATS_SERVERS: ${NATS_SERVERS}
            NATS_AUTH_ACCOUNT: ${NATS_AUTH_ACCOUNT}
            NATS_AUTH_NKEY_ISSUER_SEED: ${NATS_AUTH_NKEY_ISSUER_SEED}
            NATS_AUTH_XKEY_ISSUER_SEED: ${NATS_AUTH_XKEY_ISSUER_SEED}
            NATS_SYS_USER_PASSWORD: ${NATS_SYS_USER_PASSWORD}
            NATS_REGULAR_USER_PASSWORD: ${NATS_REGULAR_USER_PASSWORD}

            # AI config
            OPENAI_API_KEY: ${OPENAI_API_KEY}
            ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
            SAVE_LLM_RESPONSES_TO_DEBUG_DIR: ${SAVE_LLM_RESPONSES_TO_DEBUG_DIR}

        volumes:
            - aws-config:/root/.aws:cached    # AWS SSO credentials
            - ./.aws/config:/root/.aws/config:cached    # AWS SSO credentials
            - ./services/api/package.json:/usr/src/service/package.json:cached
            - ./services/api/nodemon.json:/usr/src/service/nodemon.json:cached

            # tsconfig.json is needed for the IDE to understand the project structure, but NOT used by default by Node.js
            - ./services/api/tsconfig.json:/usr/src/service/tsconfig.json:cached

            - ./services/api/config:/usr/src/service/config:cached
            - ./services/api/src:/usr/src/service/src:cached
            - ./services/api/temp-ai-responses:/usr/src/service/temp-ai-responses:cached

            # - ./packages:/usr/src/service/packages
            - ./packages/lixpi/constants/src:/usr/src/service/packages/lixpi/constants/src:cached
            - ./packages/lixpi/constants/package.json:/usr/src/service/packages/lixpi/constants/package.json:cached
            - ./packages/lixpi/debug-tools/src:/usr/src/service/packages/lixpi/debug-tools/src:cached
            - ./packages/lixpi/debug-tools/package.json:/usr/src/service/packages/lixpi/debug-tools/package.json:cached
            - ./packages/lixpi/dynamodb-service/src:/usr/src/service/packages/lixpi/dynamodb-service/src:cached
            - ./packages/lixpi/dynamodb-service/package.json:/usr/src/service/packages/lixpi/dynamodb-service/package.json:cached
            - ./packages/lixpi/lambda-service/src:/usr/src/service/packages/lixpi/lambda-service/src:cached
            - ./packages/lixpi/lambda-service/package.json:/usr/src/service/packages/lixpi/lambda-service/package.json:cached
            - ./packages/lixpi/sqs-service/src:/usr/src/service/packages/lixpi/sqs-service/src:cached
            - ./packages/lixpi/sqs-service/package.json:/usr/src/service/packages/lixpi/sqs-service/package.json:cached
            - ./packages/lixpi/ssm-service/src:/usr/src/service/packages/lixpi/ssm-service/src:cached
            - ./packages/lixpi/ssm-service/package.json:/usr/src/service/packages/lixpi/ssm-service/package.json:cached
            - ./packages/lixpi/sns-service/src:/usr/src/service/packages/lixpi/sns-service/src:cached
            - ./packages/lixpi/sns-service/package.json:/usr/src/service/packages/lixpi/sns-service/package.json:cached
            - ./packages/lixpi/nats-service/src:/usr/src/service/packages/lixpi/nats-service/src:cached
            - ./packages/lixpi/nats-service/package.json:/usr/src/service/packages/lixpi/nats-service/package.json:cached
            - ./packages/lixpi/nats-auth-callout-service/src:/usr/src/service/packages/lixpi/nats-auth-callout-service/src:cached
            - ./packages/lixpi/nats-auth-callout-service/package.json:/usr/src/service/packages/lixpi/nats-auth-callout-service/package.json:cached

        networks:
            - nats

        working_dir: /usr/src/service
        # making sure we install the packages before running the dev server
        command: >
            sh -c "pnpm i
            && pnpm run dev"
        # command: >
        #     pnpm run dev
        stop_signal: SIGTERM
        ports:
            - 3005:3000
            - 35795:35795

    # SST container is deprecated and will be removed later in the future. DON'T USE IT !
    # lixpi-sst:
    #     container_name: lixpi-sst
    #     restart: always
    #     build:
    #         dockerfile: Dockerfile-SST
    #         context: .
    #     image: lixpi/sst
    #     environment:
    #         # Force color output in the terminal, required for chalk.js to work
    #         FORCE_COLOR: 1

    #         # SST Config
    #         ORG_NAME: ${ORG_NAME}
    #         STAGE: ${STAGE}

    #         # AWS credentials, used only for local development
    #         AWS_REGION: ${AWS_REGION}
    #         AWS_PROFILE: ${AWS_PROFILE}

    #     volumes:

    #         # AWS SSO credentials
    #         - aws-config:/root/.aws:cached
    #         - ./.aws/config:/root/.aws/config:cached

    #         - ./package.json:/usr/src/service/package.json:cached

    #         - ./.vscode:/usr/src/service/.vscode:cached    # Do we really need it? Maybe for somebody who wants to attach a debugger to the container

    #         - ./services:/usr/src/service/services:cached

    #         - ./stacks:/usr/src/service/stacks:cached
    #         # - ./.env.development:/usr/src/service/.env
    #         - ./.env:/usr/src/service/.env:cached
    #         # - ./.env.development:/usr/src/service/.env
    #         - ./sst.config.ts:/usr/src/service/sst.config.ts:cached
    #         - ./tsconfig.json:/usr/src/service/tsconfig.json:cached
    #         - /var/run/docker.sock:/var/run/docker.sock:cached

    #         - ./lambda-functions:/usr/src/service/lambda-functions:cached

    #         - ./pnpm-workspace.yaml:/usr/src/service/pnpm-workspace.yaml:cached

    #         # - ./packages:/usr/src/service/packages
    #         - ./packages/lixpi/constants/src:/usr/src/service/packages/lixpi/constants/src:cached
    #         - ./packages/lixpi/constants/package.json:/usr/src/service/packages/lixpi/constants/package.json:cached
    #         - ./packages/lixpi/debug-tools/src:/usr/src/service/packages/lixpi/debug-tools/src:cached
    #         - ./packages/lixpi/debug-tools/package.json:/usr/src/service/packages/lixpi/debug-tools/package.json:cached
    #         - ./packages/lixpi/dynamodb-service/src:/usr/src/service/packages/lixpi/dynamodb-service/src:cached
    #         - ./packages/lixpi/dynamodb-service/package.json:/usr/src/service/packages/lixpi/dynamodb-service/package.json:cached
    #         - ./packages/lixpi/lambda-service/src:/usr/src/service/packages/lixpi/lambda-service/src:cached
    #         - ./packages/lixpi/lambda-service/package.json:/usr/src/service/packages/lixpi/lambda-service/package.json:cached
    #         - ./packages/lixpi/sqs-service/src:/usr/src/service/packages/lixpi/sqs-service/src:cached
    #         - ./packages/lixpi/sqs-service/package.json:/usr/src/service/packages/lixpi/sqs-service/package.json:cached
    #         - ./packages/lixpi/ssm-service/src:/usr/src/service/packages/lixpi/ssm-service/src:cached
    #         - ./packages/lixpi/ssm-service/package.json:/usr/src/service/packages/lixpi/ssm-service/package.json:cached
    #         - ./packages/lixpi/sns-service/src:/usr/src/service/packages/lixpi/sns-service/src:cached
    #         - ./packages/lixpi/sns-service/package.json:/usr/src/service/packages/lixpi/sns-service/package.json:cached
    #         - ./packages/lixpi/nats-service/src:/usr/src/service/packages/lixpi/nats-service/src:cached
    #         - ./packages/lixpi/nats-service/package.json:/usr/src/service/packages/lixpi/nats-service/package.json:cached
    #     working_dir: /usr/src/service
    #     # making sure we install the packages before running the dev server
    #     command: >
    #         sh -c "pnpm i
    #         && sleep infinity"

    lixpi-pulumi:
        container_name: lixpi-pulumi
        restart: always
        image: lixpi/pulumi
        build:
            dockerfile: infrastructure/pulumi/Dockerfile
            context: .
        environment:
            # Force color output in the terminal, required for chalk.js to work
            FORCE_COLOR: 1

            # Node.js config
            NODE_OPTIONS: '--trace-deprecation --abort-on-uncaught-exception --trace-warnings --disable-warning=ExperimentalWarning --experimental-transform-types'

            # General config
            DOMAIN_NAME: ${DOMAIN_NAME}

            # SST & Pulumi shared
            STAGE: ${STAGE}
            ORG_NAME: ${ORG_NAME}
            ENVIRONMENT: ${ENVIRONMENT}

            # PULUMI
            STATE_STORAGE_URL: ${STATE_STORAGE_URL}
            PULUMI_CONFIG_PASSPHRASE: ${PULUMI_CONFIG_PASSPHRASE}
            HOSTED_ZONE_DNS_ROLE_ARN: ${HOSTED_ZONE_DNS_ROLE_ARN}
            PULUMI_DEBUG_COMMANDS: true

            # AWS
            AWS_REGION: ${AWS_REGION}
            AWS_PROFILE: ${AWS_PROFILE}
            HOSTED_ZONE_NAME: ${HOSTED_ZONE_NAME}
            AWS_ROUTE53_HOSTED_ZONE_ID: ${AWS_ROUTE53_HOSTED_ZONE_ID}
            AWS_ROUTE53_PARENT_HOSTED_ZONE_ID: ${AWS_ROUTE53_PARENT_HOSTED_ZONE_ID}

            # DynamoDB config
            DYNAMODB_ENDPOINT: ${DYNAMODB_ENDPOINT}

            # NATS config
            NATS_DEBUG_MODE: ${NATS_DEBUG_MODE}
            NATS_TRACE_MODE: ${NATS_TRACE_MODE}
            NATS_SERVERS: ${NATS_SERVERS}
            NATS_AUTH_ACCOUNT: ${NATS_AUTH_ACCOUNT}
            NATS_SYS_USER_PASSWORD: ${NATS_SYS_USER_PASSWORD}
            NATS_REGULAR_USER_PASSWORD: ${NATS_REGULAR_USER_PASSWORD}
            NATS_AUTH_NKEY_ISSUER_SEED: ${NATS_AUTH_NKEY_ISSUER_SEED}
            NATS_AUTH_NKEY_ISSUER_PUBLIC: ${NATS_AUTH_NKEY_ISSUER_PUBLIC}
            NATS_AUTH_XKEY_ISSUER_SEED: ${NATS_AUTH_XKEY_ISSUER_SEED}
            NATS_AUTH_XKEY_ISSUER_PUBLIC: ${NATS_AUTH_XKEY_ISSUER_PUBLIC}
            NATS_SAME_ORIGIN: ${NATS_SAME_ORIGIN}

            # App host addresses
            ORIGIN_HOST_URL: ${ORIGIN_HOST_URL}
            API_HOST_URL: ${API_HOST_URL}

            # Auth0 config
            AUTH0_DOMAIN: ${AUTH0_DOMAIN}
            AUTH0_API_IDENTIFIER: ${AUTH0_API_IDENTIFIER}

            # AI config
            SAVE_LLM_RESPONSES_TO_DEBUG_DIR: ${SAVE_LLM_RESPONSES_TO_DEBUG_DIR}
            OPENAI_API_KEY: ${OPENAI_API_KEY}
            ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}

            # Web-UI config
            VITE_API_URL: ${VITE_API_URL}
            VITE_AUTH0_LOGIN_URL: ${VITE_AUTH0_LOGIN_URL}
            VITE_AUTH0_DOMAIN: ${VITE_AUTH0_DOMAIN}
            VITE_AUTH0_CLIENT_ID: ${VITE_AUTH0_CLIENT_ID}
            VITE_AUTH0_AUDIENCE: ${VITE_AUTH0_AUDIENCE}
            VITE_AUTH0_REDIRECT_URI: ${VITE_AUTH0_REDIRECT_URI}
            VITE_STRIPE_PUBLIC_KEY: ${VITE_STRIPE_PUBLIC_KEY}
            VITE_NATS_SERVER: ${VITE_NATS_SERVER}

        volumes:
            # AWS SSO credentials
            - aws-config:/root/.aws:cached
            - ./.aws/config:/root/.aws/config:cached

            # Pulumi infrastructure
            - pulumi-local-state:/var/opt/lixpi/.pulumi-local-state
            - ./infrastructure/pulumi:/usr/src/service:cached

            # Allow container to access docker on the host machine so that it can build docker images inside the container utilizing docker on the host machine
            - /var/run/docker.sock:/var/run/docker.sock:cached

            # Mounting all services
            - ./services:/usr/src/service/services:cached

            # Lixpi packages
            - ./packages/lixpi/constants/src:/usr/src/service/packages/lixpi/constants/src:cached
            - ./packages/lixpi/constants/package.json:/usr/src/service/packages/lixpi/constants/package.json:cached
            - ./packages/lixpi/debug-tools/src:/usr/src/service/packages/lixpi/debug-tools/src:cached
            - ./packages/lixpi/debug-tools/package.json:/usr/src/service/packages/lixpi/debug-tools/package.json:cached
            - ./packages/lixpi/dynamodb-service/src:/usr/src/service/packages/lixpi/dynamodb-service/src:cached
            - ./packages/lixpi/dynamodb-service/package.json:/usr/src/service/packages/lixpi/dynamodb-service/package.json:cached
            - ./packages/lixpi/lambda-service/src:/usr/src/service/packages/lixpi/lambda-service/src:cached
            - ./packages/lixpi/lambda-service/package.json:/usr/src/service/packages/lixpi/lambda-service/package.json:cached
            - ./packages/lixpi/sqs-service/src:/usr/src/service/packages/lixpi/sqs-service/src:cached
            - ./packages/lixpi/sqs-service/package.json:/usr/src/service/packages/lixpi/sqs-service/package.json:cached
            - ./packages/lixpi/ssm-service/src:/usr/src/service/packages/lixpi/ssm-service/src:cached
            - ./packages/lixpi/ssm-service/package.json:/usr/src/service/packages/lixpi/ssm-service/package.json:cached
            - ./packages/lixpi/sns-service/src:/usr/src/service/packages/lixpi/sns-service/src:cached
            - ./packages/lixpi/sns-service/package.json:/usr/src/service/packages/lixpi/sns-service/package.json:cached
            - ./packages/lixpi/nats-service/src:/usr/src/service/packages/lixpi/nats-service/src:cached
            - ./packages/lixpi/nats-service/package.json:/usr/src/service/packages/lixpi/nats-service/package.json:cached
            - ./packages/lixpi/nats-auth-callout-service/src:/usr/src/service/packages/lixpi/nats-auth-callout-service/src:cached
            - ./packages/lixpi/nats-auth-callout-service/package.json:/usr/src/service/packages/lixpi/nats-auth-callout-service/package.json:cached

            # Web-UI specific dependencies
            - ./packages-vendor/shadcn-svelte/sites/docs/src/lib:/usr/src/service/packages-vendor/shadcn-svelte/sites/docs/src/lib:cached

            # pnpm config
            - ./pnpm-workspace.yaml:/usr/src/service/pnpm-workspace.yaml:cached
        working_dir: /usr/src/service
        entrypoint: /bin/bash
        # command: -c "pnpm install && pulumi up --stack dev --non-interactive"
        command: >
            -c "sleep infinity"
        networks:
            - nats

    lixpi-caddy:
        container_name: lixpi-caddy
        image: lixpi/caddy-cert-manager
        build:
            dockerfile: Dockerfile
            context: infrastructure/pulumi/src/resources/certificate-manager
        environment:
            # Local development mode
            CADDY_LOCAL_MODE: "true"
            DOMAINS: "localhost"
            CADDY_EMAIL: ${CERTIFICATE_VALIDATION_EMAIL}
            STORAGE_TYPE: "local"
        volumes:
            - caddy-certs:/certificates
        networks:
            - nats
        # Container exits after generating certificates - no ports needed
        restart: "no"

    lixpi-ai-models-synchronization:
        container_name: lixpi-ai-models-synchronization
        image: lixpi/ai-models-synchronization
        build:
            dockerfile: lambda-functions/ai-models-synchronization/Dockerfile
            context: .
        environment:
            # Force color output in the terminal, required for chalk.js to work
            FORCE_COLOR: 1

            # Node.js config (native TypeScript execution)
            NODE_OPTIONS: '--trace-deprecation --abort-on-uncaught-exception --trace-warnings --disable-warning=ExperimentalWarning --experimental-transform-types'

            # Environment
            ENVIRONMENT: ${ENVIRONMENT}

            # Lambda config
            LAMBDA_NAME: ai-models-synchronization-local
            ORG_NAME: ${ORG_NAME:-lixpi}
            STAGE: ${STAGE:-dev}

            # API keys
            OPENAI_API_KEY: ${OPENAI_API_KEY}
            ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}

            # AWS config
            AWS_REGION: ${AWS_REGION}
            AWS_PROFILE: ${AWS_PROFILE}
            DYNAMODB_ENDPOINT: ${DYNAMODB_ENDPOINT:-http://lixpi-dynamodb:8000}

        volumes:
            # AWS SSO credentials
            - aws-config:/root/.aws:cached
            - ./.aws/config:/root/.aws/config:cached

            # Lambda function source (for live editing)
            - ./lambda-functions/ai-models-synchronization/ai-models-synchronization.ts:/app/ai-models-synchronization.ts:cached

            # # Workspace packages
            # - ./packages/lixpi/constants/src:/app/packages/lixpi/constants/src:cached
            # - ./packages/lixpi/constants/package.json:/app/packages/lixpi/constants/package.json:cached
            # - ./packages/lixpi/debug-tools/src:/app/packages/lixpi/debug-tools/src:cached
            # - ./packages/lixpi/debug-tools/package.json:/app/packages/lixpi/debug-tools/package.json:cached
            # - ./packages/lixpi/dynamodb-service/src:/app/packages/lixpi/dynamodb-service/src:cached
            # - ./packages/lixpi/dynamodb-service/package.json:/app/packages/lixpi/dynamodb-service/package.json:cached

        working_dir: /app
        command: node handler.ts
        networks:
            - nats
        restart: "no"  # Don't auto-restart, run on-demand

volumes:
    aws-config:    # AWS SSO credentials volume that's shared between multiple containers
    pulumi-local-state:    # A volume where Pulumi stores stack state. Used only for local development.
    caddy-certs:   # Shared volume for certificate storage
    dynamodb-data: # Persistent storage for DynamoDB Local

networks:
    nats:
        name: nats